{"version":3,"sources":["services/api.js","components/list.js","components/Create.js","components/Edit.js","App.js","reportWebVitals.js","index.js"],"names":["api","List","props","dataDelete","id","fetch","Api","then","response","json","data","dataCharge","catch","console","log","state","chargeData","workers","setState","this","className","to","map","worker","success","name","email","role","onClick","React","Component","Create","sendData","e","preventDefault","nombre","correo","errors","push","length","method","body","JSON","stringify","history","changeValue","target","value","element","indexOf","onSubmit","htmlFor","type","onChange","verifyError","placeholder","Edit","match","params","readOnly","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35e73709.chunk.js","sourcesContent":["const api = \"https://workersapi.000webhostapp.com/\";\nexport default api;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Api from \"../services/api\";\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chargeData: false,\n            workers: []\n        }\n    }\n    dataDelete = (id) => {\n        fetch(Api + \"?delete=\" + id)\n            .then(response => response.json())\n            .then((data) => {\n                this.dataCharge();\n            })\n            .catch(console.log);\n    }\n    dataCharge() {\n        fetch(Api)\n            .then(response => response.json())\n            .then((data) => {\n                this.setState({ chargeData: true, workers: data })\n            })\n            .catch(console.log);\n    }\n    componentDidMount() {\n        this.dataCharge();\n    }\n    render() {\n        const { chargeData, workers } = this.state;\n        if (!chargeData) { return (<div>Loading...</div>) }\n        else {\n            return (\n\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <Link to={\"/create\"} className=\"btn btn-success\">Create a new worker</Link>\n                    </div>\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">List of workers</h4>\n                        <hr></hr>\n                        <div className=\"table-responsive\">\n                            <table className=\"table\">\n                                <thead className=\"table-dark\">\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Name</th>\n                                        <th>Email</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        workers.map(\n                                            (worker) => {\n                                                if (worker.success!==0) {\n                                                    console.log(worker);\n                                                    return (\n                                                        <tr key={worker.id}>\n                                                            <td>{worker.id}</td>\n                                                            <td>{worker.name}</td>\n                                                            <td>{worker.email}</td>\n                                                            <td>\n                                                                <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n                                                                    <Link to={\"/Edit/\" + worker.id} className=\"btn btn-warning\">Edit</Link>\n                                                                    <button onClick={() => this.dataDelete(worker.id)}\n                                                                        className=\"btn btn-danger\">Delete</button>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                }\n                                                else {\n                                                    return (\n                                                        <tr key={\"\"} className=\"text-danger\">\n                                                            <td>No data</td>\n                                                            <td>No data</td>\n                                                            <td>No data</td>\n                                                            <td>No data</td>\n                                                        </tr>\n                                                    )\n\n                                                }\n                                            }\n                                        )\n                                    }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"card-footer text-muted\">\n\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default List;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Api from \"../services/api\";\nclass Create extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            errors: []\n        }\n    }\n\n    verifyError(element) {\n        return this.state.errors.indexOf(element) !== -1;\n    }\n\n    sendData = (e) => {\n        const { name, email } = this.state;\n        e.preventDefault();\n        var data = { nombre: name, correo: email }\n        var errors = [];\n        if (!name) errors.push(\"error_name\");\n        if (!email) errors.push(\"error_email\");\n\n        this.setState({ errors: errors });\n        if (errors.length > 0) return false;\n\n        fetch(Api + \"?create=1\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        }).then((data) => {\n            this.props.history.push(\"/\");\n        })\n            .catch(console.log);\n\n    }\n    changeValue = (e) => {\n        const state = this.state;\n        state[e.target.name] = e.target.value;\n        this.setState({ state, errors: [] });\n    }\n    render() {\n        const { name, email } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    Workers\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.sendData}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"\">Name:</label>\n                            <input type=\"text\" name=\"name\" id=\"name\"\n                                onChange={this.changeValue}\n                                value={name}\n                                className={((this.verifyError(\"error_name\")) ? \"is-invalid\" : \"\") + \" form-control\"} placeholder=\"\" aria-describedby=\"helpId\" />\n                            <small id=\"helpId\" className=\"invalid-feedback\">Write a name</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"\">Email:</label>\n                            <input type=\"email\" name=\"email\" id=\"email\"\n                                onChange={this.changeValue}\n                                value={email} className={((this.verifyError(\"error_email\")) ? \"is-invalid\" : \"\") + \" form-control\"} placeholder=\"\" aria-describedby=\"helpId\" />\n                            <small id=\"helpId\" className=\"invalid-feedback\">Write a email</small>\n                        </div>\n                        <br></br>\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n                            <button type=\"submit\" className=\"btn btn-success\">Add new worker</button>\n                            <Link to={\"/\"} className=\"btn btn-primary\">Cancel</Link>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"card-footer text-muted\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Create;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Api from \"../services/api\";\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chargeData: false,\n            worker: [],\n            errors:[]\n        }\n    }\n    verifyError(element) {\n        return this.state.errors.indexOf(element) !== -1;\n    }\n    sendData = (e) => {\n        const { id, name, email } = this.state.worker;\n        e.preventDefault();\n        var errors = [];\n        var data = { id: id, nombre: name, correo: email }\n        if (!name) errors.push(\"error_name\");\n        if (!email) errors.push(\"error_email\");\n\n        this.setState({ errors: errors });\n        if (errors.length > 0) return false;\n        fetch(Api + \"?update=1\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        }).then((data) => {\n            this.props.history.push(\"/\");\n        })\n            .catch(console.log);\n\n    }\n    changeValue = (e) => {\n        const state = this.state.worker;\n        state[e.target.name] = e.target.value;\n        this.setState({ worker: state, errors: [] });\n    }\n    componentDidMount() {\n        let id = this.props.match.params.id;\n        fetch(Api + \"?read=\" + id)\n            .then(response => response.json())\n            .then((data) => {\n                this.setState({ chargeData: true, worker: data[0] })\n            })\n            .catch(console.log);\n    }\n    render() {\n        const { chargeData, worker } = this.state;\n        if (!chargeData) { return (<div>Loading...</div>) }\n        else {\n            return (\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        Edit workers\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.sendData}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Key:</label>\n                                <input type=\"text\" readOnly name=\"id\" id=\"id\" value={worker.id} onChange={this.changeValue} className=\"form-control\" placeholder=\"\" aria-describedby=\"helpId\" />\n                                <small id=\"helpId\" className=\"text-muted\">Worker's identification</small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Name:</label>\n                                <input type=\"text\" name=\"name\" id=\"name\"\n                                    onChange={this.changeValue}\n                                    value={worker.name} className={((this.verifyError(\"error_name\")) ? \"is-invalid\" : \"\") + \" form-control\"} placeholder=\"\" aria-describedby=\"helpId\" />\n                                <small id=\"helpId\" className=\"invalid-feedback\">Write a name</small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Email:</label>\n                                <input type=\"email\" name=\"email\" id=\"email\"\n                                    onChange={this.changeValue}\n                                    value={worker.email} className={((this.verifyError(\"error_email\")) ? \"is-invalid\" : \"\") + \" form-control\"} placeholder=\"\" aria-describedby=\"helpId\" />\n                                <small id=\"helpId\" className=\"invalid-feedback\">Write a email</small>\n                            </div>\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n                                <button type=\"submit\" className=\"btn btn-success\">Save</button>\n                                <Link to={\"/\"} className=\"btn btn-primary\">Cancel</Link>\n\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"card-footer text-muted\">\n\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Edit;","import './App.css';\n\nimport List from \"./components/list\";\nimport Create from \"./components/Create\";\nimport Edit from './components/Edit';\n\nimport { Route, BrowserRouter as Router,Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n     <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n         <div className=\"nav navbar-nav\">\n             <Link className=\"nav-item nav-link active\" to={\"/\"}>Sistema</Link>\n         </div>\n     </nav>\n    <div className=\"container\">\n      <br></br>\n     <Route exact path=\"/\" component={List}></Route>\n     <Route path=\"/create\" component={Create}></Route>\n     <Route path=\"/Edit/:id\" component={Edit}></Route>\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}